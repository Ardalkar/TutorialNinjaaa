<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Pournima" failures="0" tests="14" name="Automation Test Cases" time="87.327" errors="0" timestamp="2024-11-03T12:33:36 IST">
  <testcase classname="testcases.RegisterTest" name="@BeforeMethod setup" time="-1.730617328002E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/#_dependency_injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/#_dependency_injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testcases.RegisterTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.RegisterTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testcases.RegisterTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.RegisterTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testcases.RegisterTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.RegisterTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testcases.RegisterTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.RegisterTest" name="VerifyRegisterWithMandates" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyRegisterWithMandates -->
  <testcase classname="testcases.RegisterTest" name="verifyRegisterAccountByProvidingAllFields" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterAccountByProvidingAllFields -->
  <testcase classname="testcases.RegisterTest" name="verifyRegisterwithExistingAccount" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterwithExistingAccount -->
  <testcase classname="testcases.RegisterTest" name="verifyRegisterwithoutEnetringDetails" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterwithoutEnetringDetails -->
  <testcase classname="testcases.LoginTest" name="verifyLoginWithValidCredentials" time="1.386"/>
  <testcase classname="testcases.LoginTest" name="verifyLoginWithValidCredentials" time="0.961"/>
  <testcase classname="testcases.LoginTest" name="verifyLoginWithValidCredentials" time="0.859"/>
  <testcase classname="testcases.LoginTest" name="verifyLoginWithInvalidCredentials" time="0.524"/>
  <testcase classname="testcases.LoginTest" name="verifyLoginWithvalidEmailAndInvalidPassword" time="0.493"/>
  <testcase classname="testcases.LoginTest" name="verifyLoginWithoutCredentials" time="0.543"/>
  <testcase classname="testcases.SearchTest" name="verifySearchWithValidProduct" time="0.632"/>
  <testcase classname="testcases.SearchTest" name="verifySearchWithInValidProduct" time="0.302"/>
  <testcase classname="testcases.SearchTest" name="verifySearchWithoutAnyProduct" time="0.31"/>
  <testcase classname="testcases.OrderProduct" name="VerifyOrderProduct" time="9.957"/>
</testsuite> <!-- Automation Test Cases -->
